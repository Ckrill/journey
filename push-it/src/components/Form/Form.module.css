.form {
  width: 100%;
}

.input {
  display: block;
  padding-top: 20px;
  padding-left: 4px;
  width: 100%;
  border: none;
  background-color: transparent;
  color: inherit;
  /* font-weight: 500; */
  font-size: calc(16rem / 16);
  line-height: calc(24rem / 16);
}

.input:focus {
  outline: none;
}

.file {
  display: none;
}

.file + .label {
  cursor: pointer;
}

.imageLabel {
  overflow: hidden;
  margin-bottom: 20px;
  max-width: 200px;
  width: 50%;
  border-radius: 50%;
}

.label {
  display: block;
  width: 100%;
}

.labelText {
  position: absolute;
  top: 20px;
  left: 0;
  padding-left: 6px;
  color: var(--text-bright);
  letter-spacing: var(--letter-spacing-spacious);
  /* font-weight: 100; */
  font-size: calc(16rem / 16);
  line-height: calc(24rem / 16);
  cursor: text;
  transition: transform var(--rapid);
  transform-origin: 0 50%;
}

.labelLine {
  position: relative;
  display: block;
  width: 100%;
  height: 1px;
  background-color: var(--stroke);
}

.labelLine::before,
.labelLine::after {
  position: absolute;
  right: 0;
  left: 0;
  width: 100%;
  height: 100%;
  content: '';
  transition: transform var(--rapid) var(--rapid);
  transform: scaleX(0);
  transform-origin: left;
}

.labelLine::before {
  background-color: var(--primary-color);
}

.labelLine::after {
  background-color: red;
}

.input:focus + .label .labelLine::before {
  transform: scaleX(1);

  will-change: transform;
}

.input:focus + .label .labelText,
.input:not(:placeholder-shown) + .label .labelText {
  transform: translateY(-100%) scale(0.875);
}

/* If input field has not been filled out */
.input:placeholder-shown + .label .labelText,
.input:placeholder-shown + .label .labelLine {
  will-change: transform;
}

/* Errors */

.error {
  visibility: hidden;
  margin-left: 11px;
  min-height: calc(2 * (16rem / 16));
  width: 100%;
  color: red;
  font-size: calc(12rem / 16);
  line-height: calc(16rem / 16);
}

.error[data-show-error='true'] {
  visibility: visible;
}

.input:invalid {
  /* Reset default styling */
  box-shadow: none;
  /* Reset default styling - END */
}

.input:invalid + .label .labelLine::after {
  transform: scaleX(1);

  will-change: transform;
}
